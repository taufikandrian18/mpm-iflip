@using Abp.Authorization.Users
@using MPM.FLP.Web.Startup
@model MPM.FLP.Services.Dto.PointConfigurationDto
@{
    ViewData["Title"] = "DetailPointConfiguration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <h2>
                    Detail Point Configuration @Model.ContentType
                </h2>
            </div>
            <div class="body">
                <div class="form-group">

                    <button id="backToIndex" class="btn btn-primary" onclick="BackToIndex()"><span class="glyphicon glyphicon-chevron-left"></span>Back</button>

                    @*<button type="submit" value="Submit" class="btn btn-primary">Submit</button>*@
                    @*<button asp-action="Index" class="btn btn-default">Kembali</button>*@
                </div>
                @(Html.Kendo().Grid<MPM.FLP.Services.Dto.PointConfigurationDto>()
                              .Name("grid")
                              .ToolBar(tools =>
                              {
                                  tools.Custom().Text("Tambah Detail Baru").HtmlAttributes(new { Href = Url.Action("CreatePoint", "MasterMenuPoint", new { id = Model.Id }) });
                              })
                              .DataSource(dataSource => dataSource
                                  .Custom()
                                  .ServerFiltering(true)
                                  .Type("aspnetmvc-ajax")
                                  .Transport(transport => transport
                                        .Read(read => read.Action("Grid_Detail_Read", "MasterMenuPoint", new { content = Model.ContentType }))
                                        .Destroy(destroy => destroy.Action("Grid_Detail_Destroy", "MasterMenuPoint"))
                                    )
                                  .Schema(schema => schema
                                    .Model(m => m.Id("id"))
                                    .Parse(@<text>
                                                function(response) {
                                                return response.result;
                                                }
                                    </text>)
                  .Data("data")
                  .Total("total")
                  )
                )
             .Columns(columns =>
             {
                 columns.Bound(typeof(string), "contentType").Title("Content Type").Width(200);
                 columns.Bound(typeof(string), "activityType").Title("Activity Type").Width(150);
                 columns.Bound(typeof(int), "point").Title("Point").Width(150);
                 columns.Bound(typeof(int), "defaultThreshold").Title("Default Threshold").Width(150);
                 columns.Bound(typeof(DateTime), "effDateFrom").Title("Start Date").ClientTemplate("#= data.effDateFrom ? kendo.toString(kendo.parseDate(data.effDateFrom), 'dd-MM-yyyy') : '' #").Width(150);
                 columns.Bound(typeof(DateTime), "effDateTo").Title("End Date").ClientTemplate("#= data.effDateTo ? kendo.toString(kendo.parseDate(data.effDateTo), 'dd-MM-yyyy') : '' #").Width(150);
                 columns.Bound(typeof(string), "isDefault").ClientTemplate(
           "#=ShowValue(data.isDefault)#").HtmlAttributes(new { @class = "text-center", @style = "width:50px;" }).Filterable(false)
         .Title("Default").Width(100);
                 columns.Command(commands =>
                 {
                     commands.Custom("Edit").Text(" ").HtmlAttributes(new { @class = "btn btn-primary", @style = "color:white;", @title = "Edit" }).IconClass("glyphicon glyphicon-cog").Click("goToEditPage");
                     //commands.Custom("Attachment").Text(" ").HtmlAttributes(new { @class = "btn btn-warning", @style = "color:white;", @title = "Tautan" }).IconClass("glyphicon glyphicon-file").Click("goToAttachmentPage");
                     commands.Destroy().Text(" ").HtmlAttributes(new { @class = "btn btn-danger", @style = "color:white;", @title = "Hapus" }).IconClass("glyphicon glyphicon-trash");
                 }).Title("Aksi").Width(250);
             })
          .Pageable()
          .Sortable()
          .Scrollable()
          .Resizable(resize => resize.Columns(true))
                )

                <script>
                    function BackToIndex() {
                       window.location.href = '@Url.Action("Index", "MasterMenuPoint")';
                        //window.history.back();
                    };
                    function ShowValue(value) {
                        if (value == true) {
                            return "<i class='glyphicon glyphicon-ok'/>";
                        } else {
                            return "<i class='glyphicon glyphicon-remove'/>";
                        }
                    }
                    function goToClaimedPage(e) {
                            window.location.href = '@Url.Action("ClaimedPeople", "MasterMenuPoint")' + '/' + e;
                    }

                    function goToAttachmentPage(e) {
                        e.preventDefault();
                        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

                        window.location.href = '@Url.Action("EditAttachment", "MasterMenuPoint")' + '/' + dataItem.id;
                    }

                    function goToEditPage(e) {
                        e.preventDefault();
                        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

                        window.location.href = '@Url.Action("EditPoint", "MasterMenuPoint")' + '/' + dataItem.id;
                    }
                    function GetMyImage(image)
                    {
                       var returnString = 'No Image Found';

                            //just checking to see if we have a name for the image
                        if (image != null && image.length > 0) {
                            returnString = "<img class='image img-responsive' src=" + image + " title=" + image + " width='100' height='100' alt=" + image + " />";
                            return returnString;
                        } else
                            return "";
                    }
                </script>

            </div>
        </div>
    </div>
</div>

