@*@model MPM.FLP.FLPDb.SalesTalks*@
@model MPM.FLP.FLPDb.ClaimPrograms
@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <h2>Edit Claim Program @Model.Title Attachment</h2>
            </div>
            <div class="body">
                @if ((string)TempData["success"] != "" && TempData["success"] != null)
                {
                    <div class="alert bg-green alert-dismissible" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                        @TempData["success"]
                    </div>
                }
                @if ((string)TempData["alert"] != "" && TempData["alert"] != null)
                {
                    <div class="alert bg-red alert-dismissible" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                        @TempData["alert"]
                    </div>
                }
                @if (!string.IsNullOrEmpty(ViewBag.result))
                {
                    <div class="alert bg-green alert-dismissible" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                        @ViewBag.result
                    </div>
                }
                <form asp-action="EditAttachment">
                    <div class="form-group">
                        <label class="control-label">Tambah Gambar Baru</label><br />
                        <input asp-for="Id" hidden />
                        @(Html.Kendo().Upload()
                            .Name("images")
                            .Validation(validation => validation.AllowedExtensions(new string[] { ".jpeg", ".jpg", ".png" }))

                        )
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Upload</button>
                        <button asp-action="Index" class="btn btn-default">Cancel</button>
                    </div>
                </form>
                @(Html.Kendo().Grid<MPM.FLP.FLPDb.ClaimProgramAttachments>()
                            .Name("gridImg")
                            .DataSource(dataSource => dataSource
                                 .Custom()
                                 .Type("aspnetmvc-ajax")
                                 .ServerPaging(false)
                                 .ServerSorting(false)
                                 .ServerFiltering(false)
                                 .Transport(transport => transport
                                             .Read(read => read.Action("GridAttachmentImage_Read", "ClaimPrograms", new { modelId = Model.Id }))
                                             .Destroy(destroy => destroy.Action("GridAttachment_Destroy", "ClaimPrograms", new { modelId = Model.Id }))
                                 )
                                 .Schema(schema => schema
                                 .Model(m =>
                                 {
                                     m.Id("id");
                                 })
                                 .Parse(@<text>
                                            function(response) {
                                            return response.result;
                                            }
                                </text>)
       .Data("data")
       .Total("total")
       )
    )
       .Columns(columns =>
       {
       columns.Bound(typeof(string), "title").Title("Title");
       columns.Bound(typeof(string), "storageUrl").ClientTemplate(
       "#=GetMyImage(data.storageUrl)#").Width(240)
       .Title("Image");
       columns.Command(commands =>
       {
           commands.Destroy().Text("Hapus");
           }).Width(250);
       })
                )

                <br />
                <form asp-action="EditAttachment">
                    <div class="form-group">
                        <label class="control-label">Tambah Dokumen Baru</label><br />
                        <input asp-for="Id" hidden />
                        @(Html.Kendo().Upload()
                            .Name("documents")
                            .Validation(validation => validation.AllowedExtensions(new string[] { ".doc", ".docx", ".pdf" }))

                        )
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Upload</button>
                        <button asp-action="Index" class="btn btn-default">Cancel</button>
                    </div>
                </form>
                @(Html.Kendo().Grid<MPM.FLP.FLPDb.ClaimProgramAttachments>()
                            .Name("gridDoc")
                            .DataSource(dataSource => dataSource
                                 .Custom()
                                 .Type("aspnetmvc-ajax")
                                 .ServerPaging(false)
                                 .ServerSorting(false)
                                 .ServerFiltering(false)
                                 .Transport(transport => transport
                                             .Read(read => read.Action("GridAttachmentDocument_Read", "ClaimPrograms", new { modelId = Model.Id }))
                                             .Destroy(destroy => destroy.Action("GridAttachment_Destroy", "ClaimPrograms", new { modelId = Model.Id }))
                                 )
                                 .Schema(schema => schema
                                 .Model(m =>
                                 {
                                     m.Id("id");
                                 })
                                 .Parse(@<text>
                                            function(response) {
                                            return response.result;
                                            }
                                </text>)
       .Data("data")
       .Total("total")
       )
    )
       .Columns(columns =>
       {
       columns.Bound(typeof(string), "title").Title("Title");
       columns.Bound(typeof(string), "storageUrl").Width(240)
       .Title("Dokumen");
       columns.Command(commands =>
       {
           commands.Destroy().Text("Hapus");
           }).Width(250);
       })
                )

                <br />
                <form asp-action="EditAttachment">
                    <div class="form-group">
                        <label class="control-label">Tambah Video Baru</label><br />
                        <input asp-for="Id" hidden />
                        @(Html.Kendo().Upload()
                            .Name("videos")
                            .Validation(validation => validation.AllowedExtensions(new string[] { ".mp4" }))

                        )
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Upload</button>
                        <button asp-action="Index" class="btn btn-default">Cancel</button>
                    </div>
                </form>
                @(Html.Kendo().Grid<MPM.FLP.FLPDb.ClaimProgramAttachments>()
                            .Name("gridVideo")
                            .DataSource(dataSource => dataSource
                                 .Custom()
                                 .Type("aspnetmvc-ajax")
                                 .ServerPaging(false)
                                 .ServerSorting(false)
                                 .ServerFiltering(false)
                                 .Transport(transport => transport
                                             .Read(read => read.Action("GridAttachmentVideo_Read", "ClaimPrograms", new { modelId = Model.Id }))
                                             .Destroy(destroy => destroy.Action("GridAttachment_Destroy", "ClaimPrograms", new { modelId = Model.Id }))
                                 )
                                 .Schema(schema => schema
                                 .Model(m =>
                                 {
                                     m.Id("id");
                                 })
                                 .Parse(@<text>
                                            function(response) {
                                            return response.result;
                                            }
                                </text>)
.Data("data")
.Total("total")
)
)
.Columns(columns =>
{
columns.Bound(typeof(string), "title").Title("Title");
columns.Bound(typeof(string), "storageUrl").Title("Video");
columns.Command(commands =>
{
commands.Destroy().Text("Hapus");
}).Width(250);
})
                )
            </div>
        </div>
        
        <script>
            function GetMyImage(image)
            {
                var returnString = 'No Image Found';

                // just checking to see if we have a name for the image
                if (image != null && image.length > 0) {
                    returnString = "<img class='image img-responsive' src=" + image + " title=" + image + " width='100' height='100' alt=" + image + " />";
                    return returnString;
                } else
                    return "";
            }        

        </script>
    </div>
</div>

<script>

    $(function() {
        // The Name() of the Grid is used to get its client-side instance.
        var SalesTalkAttachments = $("#SalesTalkAttachments").data("kendoGrid");
    });

</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
