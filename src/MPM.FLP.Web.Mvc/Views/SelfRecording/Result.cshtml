@using Abp.Authorization.Users
@using MPM.FLP.Web.Startup
@*@model MPM.FLP.FLPDb.SelfRecordings*@
@model MPM.FLP.Web.Models.FLPMPM.AssignmentDealerVM
@{
    ViewData["Title"] = "SelfRecording";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <h2>
                    Self Recording @Model.Title - @Model.NamaDealer Result
                </h2>
            </div>
            <div class="body">
                <div class="form-group">
                    <button id="backToIndex" class="btn btn-primary" onclick="BackToIndex()"><span class="glyphicon glyphicon-chevron-left"></span>Back</button>
                    @*<button id="importExcel" class="btn btn-warning" onclick="ImportExcel('@Model.Id')">Import Excel</button>*@
                    <button id="templateBtn" class="btn btn-success" onclick="DownloadExcel()">Download Excel</button>
                    <input id="namaDealer" asp-for="NamaDealer" hidden />
                    <input id="title" asp-for="Title" hidden />
                    @*<button type="submit" value="Submit" class="btn btn-primary">Submit</button>*@
                    @*<button asp-action="Index" class="btn btn-default">Kembali</button>*@
                </div>
                @(Html.Kendo().Grid<MPM.FLP.Web.Models.FLPMPM.RoleplayResultVM>()
                              .Name("grid")
                              //.ToolBar(tools =>
                              //{
                              //    tools.Custom().Text("Tambah Detail Baru").HtmlAttributes(new { Href = Url.Action("CreateDetail", "Roleplay", Model) });
                              //})
                              .DataSource(dataSource => dataSource
                                  .Ajax()
                                  .PageSize(10)
                                  .Read(read => read.Action("Grid_Result_Read", "SelfRecording", Model)

                               )
                             )
                          .Columns(columns =>
                          {
                              columns.Bound(c => c.idmpm).Title("Id MPM").Width(100);
                              columns.Bound(c => c.namaFLP).Title("Nama FLP").Width(200);
                              columns.Bound(c => c.flpResult).Title("FLP Result").Width(100);
                              columns.Bound(c => c.verificationResult).Title("Verification Result").Width(215000);
                              columns.Bound(c => c.url).Title("Video Url").Width(200);
                              //columns.Bound(typeof(string), "idmpm").Title("Id MPM").Width(100);
                              //columns.Bound(typeof(string), "namaFLP").Title("Nama FLP").Width(200);
                              //columns.Bound(typeof(string), "flpResult").Title("FLP Result").Width(200);
                              //columns.Command(commands =>
                              //                                           {
                              //    commands.Custom("Edit").Text(" ").HtmlAttributes(new { @class = "btn btn-primary", @style = "color:white;", @title = "View" }).IconClass("glyphicon glyphicon-cog").Click("GoToEditPage");
                              //    commands.Destroy().Text(" ").HtmlAttributes(new { @class = "btn btn-danger", @style = "color:white;", @title = "Hapus" }).IconClass("glyphicon glyphicon-trash");
                              //}).Title("Aksi").Width(180);
                          })
                       .Pageable()
                       .Sortable()
                       .Scrollable()
                       .ClientDetailTemplateId("template")
                       .Resizable(resize => resize.Columns(true))
                       //.HtmlAttributes(new { style = "height: 1000px" })
                )

                <script id="template" type="text/kendo-tmpl">
                    @(Html.Kendo().Grid<MPM.FLP.Web.Models.FLPMPM.RoleplayResultVM>()
                        .Name("grid_#=idmpm#") // template expression, to be evaluated in the master context
                        .Columns(columns =>
                        {
                            columns.Bound(c => c.namaFLP).Title("Nama FLP").Width(200);
                            columns.Bound(c => c.CreationTime).Title("Tanggal").Format("{0:dd-MM-yyyy HH:mm:ss}").Width(200);
                            columns.Bound(c => c.kodeDealerMPM).Title("Kode Dealer").Width(100);
                            columns.Bound(c => c.namaDealerMPM).Title("Nama Dealer").Width(200);
                            columns.Bound(c => c.flpResult).Title("FLP Result").Width(100);
                            columns.Bound(c => c.verificationResult).Title("Verification Result").Width(150);
                            columns.Bound(c => c.isVerified).ClientTemplate("\\#=ShowValue(isVerified)\\#")
                    .Title("Verified ?").HtmlAttributes(new { @class = "text-center", @style = "width:50px;" }).Width(100).Filterable(false);
                            columns.Command(commands =>
                            {
                                commands.Custom("Validate").Text(" ").HtmlAttributes(new { @class = "btn btn-primary", @style = "color:white;", @title = "Validate" }).IconClass("glyphicon glyphicon-cog").Click("GoToValidationPage");
                            }).Title("Validation");
                        })
                        .DataSource(dataSource => dataSource
                                      .Ajax()
                                      .PageSize(10)
                                      .Read(read => read.Action("Grid_Result_Detail_Read", "SelfRecording", new { idmpm = "#=idmpm#", idRoleplay = Model.Id }))
                                   )
                                @*.DataSource(dataSource => dataSource
                                                   .Custom()
                                                   .PageSize(5)
                                                   .ServerFiltering(true)
                                                   .Type("aspnetmvc-ajax")
                                                   .Transport(transport => transport
                                                                 .Read(read => read.Action("Grid_Result_Detail_Read", "Roleplay", new { idmpm = "#=idmpm#" }))
                                                     //.Destroy(destroy => destroy.Action("Grid_Detail_Destroy", "Roleplay"))
                                                     )
                                                   .Schema(schema => schema
                                                     .Model(m => m.Id("id"))
                                                     .Parse(@<text>
                                                                 function(response) {
                                                                 return response.result;
                                                                 }
                                                     </text>)
                                      .Data("data")
                                      .Total("total")
                                      )
                                    )*@
                .HtmlAttributes(new { style = "width: 1200px" })
              .Pageable()
              .Sortable()
              //.Scrollable()
              //.Resizable(resize => resize.Columns(true))
              .ToClientTemplate()

                    )

                </script>
                <script>
                        function dataBound() {
                            this.expandRow(this.tbody.find("tr.k-master-row").first());
                        }
                        function ShowValue(value) {
                            if (value == true) {
                                return "<i class='glyphicon glyphicon-ok'/>";
                            } else {
                                return "<i class='glyphicon glyphicon-remove'/>";
                            }
                        }
                    @*function goToClaimedPage(e) {
                            window.location.href = '@Url.Action("ClaimedPeople", "Roleplay")' + '/' + e;
                    }*@
                    function GoToValidationPage(e) {
                        e.preventDefault();
                        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

                        window.location.href = '@Url.Action("Validation", "SelfRecording")' + '/' + dataItem.id;
                    }
                    function DownloadExcel(e) {

                        window.location.href = '@Url.Action("DownloadResults", "SelfRecording")'+ "?id=" + '@Model.Id' + "&title=" + $("#title").val() + "&namaDealer=" + $("#namaDealer").val();
                    }

                    function ImportExcel(e) {
                        window.location.href = '@Url.Action("ImportExcel", "SelfRecording")' + '/' + e;
                    }

                    function BackToIndex() {
                        //window.location.href = '@Url.Action("Index", "SelfRecording")';
                        window.location.href = '@Url.Action("Dealer", "SelfRecording", new { id = Model.Id})';
                        //window.history.back();
                    };
                    //function GetMyImage(image)
                    //{
                    //   var returnString = 'No Image Found';

                    //        //just checking to see if we have a name for the image
                    //    if (image != null && image.length > 0) {
                    //        returnString = "<img class='image img-responsive' src=" + image + " title=" + image + " width='100' height='100' alt=" + image + " />";
                    //        return returnString;
                    //    } else
                    //        return "";
                    //}
                </script>

            </div>
        </div>
    </div>
</div>

