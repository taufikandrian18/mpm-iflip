@model MPM.FLP.FLPDb.InboxMessages

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <h2>Tambah Inbox Message Baru</h2>
            </div>
            <div class="body">
                <div class="row">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        @if ((string)TempData["alert"] != "" && TempData["alert"] != null)
                        {
                            <div class="alert bg-red alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                                @TempData["alert"]
                            </div>
                        }
                        @using (Html.BeginForm("Create", "Inbox", FormMethod.Post, new { id = "formCreate", enctype = "multipart/form-data" }))
                        {
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                <label asp-for="Title" class="control-label">Judul</label><br />
                                <input asp-for="Title" id="txtTitle" class="k-textbox" style="width:100%"/>
                                @*<span asp-validation-for="Title" class="text-danger"></span>*@
                            </div>
                            <div class="form-group">
                                <label class="control-label">Karesidenan</label><br />
                                @(Html.Kendo().DropDownList()
                                    .Name("karesidenan")
                                    .HtmlAttributes(new { style = "width:100%" })
                                    .OptionLabel("Pilih Karesidenan...")
                                    .DataTextField("karesidenan")
                                    .DataValueField("karesidenan")
                                    .DataSource(source =>
                                            source.Custom()
                                               .ServerFiltering(true)
                                               .Type("aspnetmvc-ajax")
                                               .Transport(transport => transport
                                                    .Read(read =>
                                                    {
                                                        read.Action("Cascading_Get_Karesidenan", "Inbox");
                                                    })
                                               )
                                               .Schema(schema => schema
                                                    .Data("data")
                                                    .Model(model =>
                                                    {
                                                        model.Id("karesidenan");
                                                        model.Field("karesidenan", typeof(string));
                                                    })
                                                    .Parse(@<text>
                                                                function(response) {
                                                                return response.result;
                                                                }
                                                    </text>)
       )
       )
                                )
                                <label class="control-label">Kota</label><br />
                                @(Html.Kendo().DropDownList()
                                    .Name("kota")
                                    .HtmlAttributes(new { style = "width:100%" })
                                    .OptionLabel("Pilih Kota...")
                                    .DataTextField("kota")
                                    .DataValueField("kota")
                                    .DataSource(source =>
                                            source.Custom()
                                               .ServerFiltering(true)
                                               .Type("aspnetmvc-ajax")
                                               .Transport(transport => transport
                                                    .Read(read =>
                                                    {
                                                        read.Action("Cascading_Get_Kota", "Inbox").Data("filterKaresidenan");
                                                    })
                                               )
                                               .Schema(schema => schema
                                                    .Data("data")
                                                    .Model(model =>
                                                    {
                                                        model.Id("kota");
                                                        model.Field("kota", typeof(string));
                                                    })
                                                    .Parse(@<text>
                                                                function(response) {
                                                                return response.result;
                                                                }
                                                    </text>)
)
)
.Enable(false)
.AutoBind(false)
.CascadeFrom("karesidenan")
                                )

                                <label class="control-label">Dealer</label><br />
                                @(Html.Kendo().DropDownList()
                                    .Name("dealer")
                                    .HtmlAttributes(new { style = "width:100%" })
                                    .OptionLabel("Pilih Dealer...")
                                    .DataTextField("dealer")
                                    .DataValueField("dealer")
                                    .TemplateId("dealer-item-template")
                                    .ValueTemplateId("dealer-item-template")
                                    .DataSource(source =>
                                            source.Custom()
                                               .ServerFiltering(true)
                                               .Type("aspnetmvc-ajax")
                                               .Transport(transport => transport
                                                    .Read(read =>
                                                    {
                                                        read.Action("Cascading_Get_Dealer", "Inbox").Data("filterKota");
                                                    })
                                               )
                                               .Schema(schema => schema
                                                    .Data("data")
                                                    .Model(model =>
                                                    {
                                                        model.Id("dealer");
                                                        model.Field("dealer", typeof(string));
                                                    })
                                                    .Parse(@<text>
                                                                function(response) {
                                                                return response.result;
                                                                }
                                                    </text>)
)
)
.Enable(false)
.AutoBind(false)
.CascadeFrom("kota")
                                )

                                <br /><br />
                                <button type="button" id="btn_getUser" value="Search User" class="btn btn-primary">Search User</button><br /><br />
                                <div class="form-group">
                                    <input type="text" class="k-textbox" id='searchBox' placeholder='Search by id mpm' />
                                    <label class="control-label">
                                        <i class="glyphicon glyphicon-search"></i>
                                    </label><br />
                                </div>

                                @(Html.Kendo().ListBox()
                                    .Name("optional")
                                    .ConnectWith("selected")
                                    .DataTextField("nama")
                                    .DataValueField("idmpm")
                                    .TemplateId("user-item-template")
                                    .Selectable(ListBoxSelectable.Multiple)
                                    .HtmlAttributes(new { style = "width:400px; height:400px" })
                                     .Draggable(true)
                                     .DropSources("selected")
                                     .Toolbar(toolbar =>
                                     {
                                         toolbar.Tools(tools => tools
                                             .MoveUp()
                                             .MoveDown()
                                             .TransferTo()
                                             .TransferFrom()
                                             .TransferAllTo()
                                             .TransferAllFrom()
                                             .Remove());
                                     })
                                     .BindTo(new List<MPM.FLP.Web.Models.FLPMPM.InternalUsersVM>())
                                )

                                @(Html.Kendo().ListBox()
                                    .Name("selected")
                                    .DataTextField("nama")
                                    .DataValueField("idmpm")
                                    .TemplateId("user-item-template")
                                    .Selectable(ListBoxSelectable.Multiple)
                                    .HtmlAttributes(new { style = "width:400px; height:400px" })
                                    .Draggable(true)
                                    .DropSources("optional")
                                    .BindTo(new List<MPM.FLP.Web.Models.FLPMPM.InternalUsersVM>())
                                )
                                <script id="user-item-template" type="text/x-kendo-template">
                                    <span class="k-state-default">(#: data.idGroupJabatan #) #: data.idmpm # - #: data.nama # </span>
                                </script>
                                <script id="dealer-item-template" type="text/x-kendo-template">
                                    <span class="k-state-default">#: data.kode # - #: data.dealer #</span>
                                </script>
                                <script>

                                function filterKaresidenan() {
                                    return {
                                        karesidenan: $("#karesidenan").val()
                                    };
                                }
                                function filterKota() {
                                    return {
                                        channel : 'H1',
                                        karesidenan: $("#karesidenan").val(),
                                        kota: $("#kota").val()
                                    };
                                }

                                $(document).ready(function () {

                                    var optional = $('#optional').data('kendoListBox');
                                    var selected = $('#selected').data('kendoListBox');

                                    $("#searchBox").on("input",function(e) {
                                        var listBox = $("#optional").getKendoListBox();
                                        var searchString = $(this).val();

                                        listBox.dataSource.filter({ field: "searchIdmpm", operator: "contains", value: searchString });
                                    });

                                    var InternalUser = kendo.data.Model.define({
                                        id: "idmpm",
                                        fields: {
                                            "nama": {
                                                type: "string"
                                            }
                                        }
                                    });

                                    $("#btn_getUser").click(function () {
                                        abp.ui.setBusy();
                                        var parameter = {
                                            karesidenan: $("#karesidenan").val(),
                                            kota: $("#kota").val(),
                                            dealer: $("#dealer").val()
                                        };

                                        $.ajax({
                                            url: "@Url.Action("Get_User","Inbox")",
                                            data: parameter,
                                            type: 'GET',
                                            success: function (response) {
                                                removeUser();
                                                var userList = response.result;
                                                userList.forEach(insertUser);
                                                abp.ui.clearBusy();
                                            },
                                            error: function (response) {
                                            }
                                        });
                                    })

                                    function removeUser() {
                                        var items = optional.items();
                                        for (var i = 0; i < items.length; i++) {
                                            optional.remove(items[i]);
                                        }
                                        items = selected.items();
                                        for (var i = 0; i < items.length; i++) {
                                            selected.remove(items[i]);
                                        }
                                    }

                                    function insertUser(item, index) {
                                        optional.add(new InternalUser({
                                            idmpm: item.idmpm,
                                            nama: item.nama,
                                            idGroupJabatan: item.idGroupJabatan,
                                            searchIdmpm: item.idmpm.toString()
                                        }));
                                    }


                                });

                                </script>
                            </div>

                            <div class="form-group">
                                <label asp-for="Contents" class="control-label">Konten</label> <br />
                                @(Html.Kendo().EditorFor(e => e.Contents)
                                    .HtmlAttributes(new { style = "width:100%; height:440px" })
                                    .Tools(tools => tools
                                      .Clear()
                                      .Bold().Italic().Underline().Strikethrough()
                                      .JustifyLeft().JustifyCenter().JustifyRight().JustifyFull()
                                      .InsertUnorderedList().InsertOrderedList()
                                      .Outdent().Indent()
                                      //.Formatting()
                                      //.CleanFormatting()
                                      .FontName()
                                      .FontSize()
                                      .ForeColor().BackColor()
                                  )
                                )
                                @Html.ValidationMessageFor(model => model.Contents)
                                <span asp-validation-for="Contents" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label class="control-label"> Gambar </label>
                                <br />
                                @(Html.Kendo().Upload()
                                    .Name("images")
                                    .Multiple(true)
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".jpeg", ".jpg", ".png" }))
                                )
                            </div>
                            <div class="form-group">
                                <label class="control-label"> Video </label>
                                <br />
                                @(Html.Kendo().Upload()
                                    .Name("videos")
                                    .Multiple(true)
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".mp4" }))
                                )
                            </div>
                            <div class="form-group">
                                <label class="control-label"> Dokumen </label>
                                <br />
                                @(Html.Kendo().Upload()
                                    .Name("files")
                                    .Multiple(true)
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".xls", ".xlsx", ".pdf", ".docx", ".doc" }))
                                )
                            </div>
                            <div class="form-group">
                                <input type="submit" id="btnSubmit" value="Send" class="btn btn-primary"/>
                                <input type="button" id="btnBack" class="btn btn-default" onclick="backToIndex()" value="Kembali">
                            </div>
                        }

                    </div>
                    
                </div>
                @*<div class="form-group">
                    <button type="button" id="btnSubmit" value="Create" class="btn btn-primary">Tambah</button>
                    <button class="btn btn-default" onclick="backToIndex()">Kembali</button>
                </div>*@
            </div>
            <div class="footer">
                
            </div>
        </div>
    </div>
</div>

<script>
    
    $(function () {
        $('#templateBtn').click(function () {
            window.location.href = '@Url.Action("DownloadTemplate", "Inbox", Model)';
        });

    });

    $(document).ready(function () {

        $('form').submit(function (event) {

            event.preventDefault();            

            var formdata = new FormData($('#formCreate').get(0)); 
            var content = $("#Contents").val();
            var title = $("#txtTitle").val();

            var selected = $('#selected').data('kendoListBox').dataItems();
            if (title.trim() == "") {
                alert("Title masih kosong");
                abp.ui.clearBusy();
            }else if (selected.length == 0) {
                alert("User masih kosong");
                abp.ui.clearBusy();
            } else if (content.trim() == "") {
                alert("Content masih kosong");
                abp.ui.clearBusy();
            } else {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Create", "Inbox")',
                    data: formdata,
                    dataType: "json",
                    processData: false, 
                    contentType: false, 
                    success: function (response) {
                        //code omitted for brevity
                        
                        insertRecipient(response.result.message);
                        //console.log(response);
                    }
                });  
            }
                
        }); 

        function insertRecipient(id) {
            var selected = $('#selected').data('kendoListBox').dataItems();
            //var item = selected.dataItems();

            var listInternalUser = [];
            
            $.each(selected, function (key, value) {
                listInternalUser.push({
                    Idmpm: value.idmpm, nama: value.nama
                });
            });

            var parameter = {
                id : id,
               selectedUser: listInternalUser
            };

            abp.ui.setBusy();

            $.ajax({
                 url: '@Url.Action("InsertRecipient","Inbox")',
                type: 'POST',
                data: parameter,
                success: function (response) {
                    //console.log(response);
                    //alert(response.result.message);
                    //abp.ui.clearBusy();
                    window.location.href = '@Url.Action("Index", "Inbox")';
                },
                error: function (result) {

                }
            });
        }
    });

    function backToIndex() {
       window.location.href = '@Url.Action("Index", "Inbox")';
        //window.history.back();
    };

    
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


