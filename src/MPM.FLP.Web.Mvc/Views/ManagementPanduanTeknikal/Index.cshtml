@using Abp.Authorization.Users
@using MPM.FLP.Web.Startup
@model MPM.FLP.FLPDb.Guides
@{
    ViewData["Title"] = "ManagementPanduanTeknikal";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <h2>
                    Management Panduan Teknikal
                </h2>
            </div>
            <div class="body">
                <div class="row table-responsive">
                    @(Html.Kendo().Grid<MPM.FLP.FLPDb.Guides>()
                             .Name("grid")
                             .ToolBar(tools =>
                             {
                                 tools.Custom().Text("Tambah Panduan Teknikal Baru").HtmlAttributes(new { Href = Url.Action("Create", "ManagementPanduanTeknikal") });
                             })
                             .DataSource(dataSource => dataSource
                                 .Custom()
                                 .ServerFiltering(true)
                                 .Type("aspnetmvc-ajax")
                                 .Transport(transport => transport
                                               .Read(read => read.Action("Grid_Read", "ManagementPanduanTeknikal"))
                                               .Destroy(destroy => destroy.Action("Grid_Destroy", "ManagementPanduanTeknikal"))
                                   )
                                 .Schema(schema => schema
                                   .Model(m => m.Id("id"))
                                   .Parse(@<text>
                                            function(response) {
                                            return response.result;
                                            }
                                </text>)
                           .Data("data")
                           .Total("total")
                           )
                         )
                      .Columns(columns =>
                      {
                          columns.Bound(typeof(DateTime), "creationTime").Title("Tanggal").ClientTemplate("#= data.creationTime ? kendo.toString(kendo.parseDate(data.creationTime), 'dd-MM-yyyy') : '' #").Filterable(false).Width(150);
                          columns.Bound(typeof(string), "title").Title("Judul").Lockable(false).Filterable(true).Width(200);
                          columns.Bound(typeof(string), "featuredImageUrl")
                             .ClientTemplate("#=GetMyImage(data.featuredImageUrl)#").Width(200)
                             .Title("Gambar").Filterable(false);
                          columns.Bound(typeof(int), "readingTime").Title("Minimal Waktu Baca").Filterable(false).Width(170).HtmlAttributes(new { @class = "text-center" });
                          columns.Bound(typeof(long), "viewCount").Title("Jumlah Pembaca").Width(100).Filterable(false);
                          columns.Bound(typeof(string), "h1").ClientTemplate(
                  "#=ShowValue(data.h1)#").Filterable(false).Width(70).HtmlAttributes(new { @class = "text-center" });
                          columns.Bound(typeof(string), "h2").ClientTemplate(
                  "#=ShowValue(data.h2)#").Filterable(false).Width(70).HtmlAttributes(new { @class = "text-center" });
                          columns.Bound(typeof(string), "h3").ClientTemplate(
                  "#=ShowValue(data.h3)#").Filterable(false).Width(70).HtmlAttributes(new { @class = "text-center" });
                          columns.Bound(typeof(string), "isPublished").ClientTemplate(
                  "#=ShowValue(data.isPublished)#")
                .Title("Tampilkan?").HtmlAttributes(new { @class = "text-center", @style = "width:50px;" }).Filterable(false).Width(100);
                          columns.Bound(typeof(string), "creatorUsername").Title("Pembuat").Width(200).Filterable(true);
                          //columns.Template("<button class='btn btn-primary waves-effect' onclick='goToEditPage(\"#=data.id#\")'><span class='glyphicon glyphicon-cog'></span><span style='margin-left:10px;'>Ubah</span></button>").Width(20);
                          //columns.Template("<button class='btn btn-warning waves-effect' onclick='goToEditPage(\"#=data.id#\")'><span class='glyphicon glyphicon-file'></span><span style='margin-left:10px;'>Tautan</span></button>").Width(20);
                          columns.Command(commands =>
                          {
                              //commands.Custom("<button class='btn btn-primary waves-effect'><span class='glyphicon glyphicon-cog'></span><span style='margin-left:10px;'>Ubah</span></button>").Click("goToEditPage");
                              commands.Custom("Edit").Text(" ").HtmlAttributes(new { @class = "btn btn-primary", @style = "color:white;", @title = "Ubah" }).IconClass("glyphicon glyphicon-cog").Click("goToEditPage");
                              commands.Custom("Attachment").Text(" ").HtmlAttributes(new { @class = "btn btn-warning", @style = "color:white;", @title = "Tautan" }).IconClass("glyphicon glyphicon-file").Click("goToAttachmentPage");
                              commands.Destroy().Text(" ").HtmlAttributes(new { @class = "btn btn-danger", @style = "color:white;", @title = "Hapus"}).IconClass("glyphicon glyphicon-trash");
                              //commands.Custom("Ubah Attachment").Click("goToAttachmentPage");
                              //commands.Destroy().Text("Hapus");
                          }).Width(250);
                      })
                        .Pageable()
                        .Sortable()
                        .Scrollable(s => { s.Height("500"); })
                        .Navigatable()
                        .Resizable(resize => resize.Columns(true))
                        .Filterable(filterable => filterable
                            .Extra(false)
                            .Operators(operators => operators
                            .ForString(str => str.Clear()
                                .IsEqualTo("Is equal to")
                                .Contains("Contains")
                            ))
                  )
                    )

                    <script>
                        function ShowValue(value) {
                            if (value == true) {
                                return "<i class='glyphicon glyphicon-ok'/>";
                            } else {
                                return "<i class='glyphicon glyphicon-remove'/>";
                            }
                        }
                        function goToEditPage(e) {
                            //var grid = $("#grid").data("kendoGrid");

                            e.preventDefault();
                            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
                            //var dataItem = grid.select().dataItem($(e.currentTarget).closest("tr"));

                            window.location.href = '@Url.Action("Edit", "ManagementPanduanTeknikal")' + '/' + dataItem.id;
                            //window.location.href = '@Url.Action("Edit", "ManagementPanduanTeknikal")' + '/' + e;
                        }
                        function goToAttachmentPage(e) {
                            e.preventDefault();
                            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

                            window.location.href = '@Url.Action("EditAttachment", "ManagementPanduanTeknikal")' + '/' + dataItem.id;
                        }
                        function GetMyImage(image)
                        {
                           var returnString = 'No Image Found';

                                //just checking to see if we have a name for the image
                            if (image != null && image.length > 0) {
                                returnString = "<img class='image img-responsive' src=" + image + " title=" + image + " width='100' height='100' alt=" + image + " />";
                                return returnString;
                            } else
                                return "";
                        }
                    </script>

                </div>
            </div>
        </div>
    </div>
</div>



