@using Abp.Authorization.Users
@using MPM.FLP.Web.Startup
@model MPM.FLP.FLPDb.RolePlays
@{
    ViewData["Title"] = "Roleplay";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <h2>
                    Roleplay
                </h2>
            </div>
            <div class="body">
                @(Html.Kendo().Grid<MPM.FLP.FLPDb.RolePlays>()
                              .Name("grid")
                              .ToolBar(tools =>
                              {
                                  tools.Custom().Text("Tambah Jabatan Baru").HtmlAttributes(new { Href = Url.Action("Create", "Roleplay") });
                              })
                              .DataSource(dataSource => dataSource
                                  .Custom()
                                  .ServerFiltering(true)
                                  .Type("aspnetmvc-ajax")
                                  .Transport(transport => transport
                                                .Read(read => read.Action("Grid_Read", "Roleplay"))
                                                .Destroy(destroy => destroy.Action("Grid_Destroy", "Roleplay"))
                                    )
                                  .Schema(schema => schema
                                    .Model(m => m.Id("id"))
                                    .Parse(@<text>
                                                function(response) {
                                                return response.result;
                                                }
                                    </text>)
                         .Data("data")
                         .Total("total")
                         )
                       )
                    .Columns(columns =>
                    {
                        columns.Bound(typeof(string), "title").Title("Judul").Width(200).Filterable(true);
                        columns.Bound(typeof(string), "creatorUsername").Title("Pembuat").Width(150).Filterable(true);
                        columns.Bound(typeof(DateTime), "creationTime").Title("Tanggal Buat").ClientTemplate("#= data.creationTime ? kendo.toString(kendo.parseDate(data.creationTime), 'dd-MM-yyyy') : '' #").Width(150).Filterable(false);
                        columns.Bound(typeof(string), "lastModifierUsername").Title("Pembaharu").Width(150).Filterable(false);
                        columns.Bound(typeof(DateTime), "lastModificationTime").Title("Tanggal Pembaharuan").ClientTemplate("#= data.lastModificationTime ? kendo.toString(kendo.parseDate(data.lastModificationTime), 'dd-MM-yyyy') : '' #").Width(180).Filterable(false);
                        columns.Template("<button class='btn btn-primary waves-effect' onclick='goToDealerPage(\"#=data.id#\")'><span>Assign Dealer</span></button>").Title("Dealer").Width(150);
                        columns.Bound(typeof(string), "order").Title("Urutan").Filterable(false).Width(100);
                        //columns.Template("<button class='btn btn-primary waves-effect' onclick='GoToDetailPage(\"#=data.id#\")'><span>Detail</span></button>").Title("Claimed By").Width(160);
                        columns.Command(commands =>   
                        {
                            commands.Custom("Detail").Text(" ").HtmlAttributes(new { @class = "btn btn-success", @style = "color:white;", @title = "Detail" }).IconClass("glyphicon glyphicon-pencil").Click("GoToDetailPage");
                             commands.Custom("Result").Text(" ").HtmlAttributes(new { @class = "btn btn-warning", @style = "color:white;", @title = "Result" }).IconClass("glyphicon glyphicon-file").Click("GoToResultPage");
                            commands.Custom("Edit").Text(" ").HtmlAttributes(new { @class = "btn btn-primary", @style = "color:white;", @title = "Edit" }).IconClass("glyphicon glyphicon-cog").Click("GoToEditPage");
                            commands.Destroy().Text(" ").HtmlAttributes(new { @class = "btn btn-danger", @style = "color:white;", @title = "Hapus"}).IconClass("glyphicon glyphicon-trash");
                        }).Title("Aksi").Width(310);
                    })
                 .Pageable()
                 .Sortable()
                 .Scrollable()
                 .Resizable(resize => resize.Columns(true))
                 .Filterable(filterable => filterable
                    .Extra(false)
                    .Operators(operators => operators
                    .ForString(str => str.Clear()
                        .IsEqualTo("Is equal to")
                        .Contains("Contains")
                    ))
                  )
                )

                <script>

                    //function ShowValue(value) {
                    //    if (value == true) {
                    //        return "<i class='glyphicon glyphicon-ok'/>";
                    //    } else {
                    //        return "<i class='glyphicon glyphicon-remove'/>";
                    //    }
                    //}
                    function GoToDetailPage(e) {
                        e.preventDefault();
                        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

                        window.location.href = '@Url.Action("Detail", "Roleplay")' + '/' + dataItem.id;
                    }
                    function goToDealerPage(e) {
                            window.location.href = '@Url.Action("AssignDealer", "Roleplay")' + '/' + e;
                    }
                    function GoToResultPage(e) {
                        e.preventDefault();
                        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

                        //window.location.href = '@Url.Action("Result", "Roleplay")' + '/' + dataItem.id;
                        window.location.href = '@Url.Action("Dealer", "Roleplay")' + '/' + dataItem.id;
                    }
                    
                    function GoToEditPage(e) {
                        e.preventDefault();
                        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

                        window.location.href = '@Url.Action("Edit", "Roleplay")' + '/' + dataItem.id;
                    }
                    //function GetMyImage(image)
                    //{
                    //   var returnString = 'No Image Found'; 

                    //        //just checking to see if we have a name for the image 
                    //    if (image != null && image.length > 0) {
                    //        returnString = "<img class='image img-responsive' src=" + image + " title=" + image + " width='100' height='100' alt=" + image + " />";
                    //        return returnString;
                    //    } else
                    //        return "";
                    //}    
                </script>
                
            </div>
        </div>
    </div>
</div>

