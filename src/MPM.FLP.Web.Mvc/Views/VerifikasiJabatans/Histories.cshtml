@using Abp.Authorization.Users
@using MPM.FLP.Web.Startup
@model MPM.FLP.FLPDb.VerifikasiJabatanHistories
@{
    ViewData["Title"] = "VerifikasiJabatanHistories";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <h2>
                    Verifikasi Jabatan Histories
                </h2>
            </div>
            <div class="body">
                @(Html.Kendo().Grid<MPM.FLP.FLPDb.VerifikasiJabatanHistories>()
                              .Name("grid")
                              //.ToolBar(tools =>
                              //{
                              //    tools.Custom().Text("Tambah Verifikasi Jabatan Baru").HtmlAttributes(new { Href = Url.Action("Create", "VerifikasiJabatans") });
                              //})
                              .DataSource(dataSource => dataSource
                                  .Custom()
                                  .ServerFiltering(true)
                                  .Type("aspnetmvc-ajax")
                                  .Transport(transport => transport
                                                .Read(read => read.Action("Grid_Histories_Read", "VerifikasiJabatans"))
                                                //.Destroy(destroy => destroy.Action("Grid_Histories_Destroy", "VerifikasiJabatans"))
                                    )
                                  .Schema(schema => schema
                                    .Model(m => m.Id("id"))
                                    .Parse(@<text>
                                                function(response) {
                                                return response.result;
                                                }
                                    </text>)
                         .Data("data")
                         .Total("total")
                         )
                       )
                    .Columns(columns =>
                    {
                        columns.Bound(typeof(int), "idmpm").Title("ID MPM").Width(100);
                        columns.Bound(typeof(string), "isVerified").ClientTemplate(
                  "#=ShowValue(data.isVerified)#")
                .Title("Terverifikasi").HtmlAttributes(new { @class = "text-center", @style = "width:50px;" }).Filterable(false).Width(150);
                        columns.Bound(typeof(int), "idHonda").Title("ID Honda").Width(100);
                        columns.Bound(typeof(string), "nama").Title("Nama").Width(200);
                        columns.Bound(typeof(string), "noKTP").Title("No. KTP");
                        columns.Bound(typeof(string), "email").Title("E-mail");
                        columns.Bound(typeof(string), "alamat").Title("Alamat").Width(300);
                        columns.Bound(typeof(string), "channel").Title("Channel").Width(100);
                        columns.Bound(typeof(string), "handphone").Title("No. HP").Width(100);
                        columns.Bound(typeof(string), "gender").Title("Gender").Width(100);

                        columns.Bound(typeof(string), "jabatan").Title("Jabatan").Width(300);

                        columns.Bound(typeof(string), "dealerName").Title("Nama Dealer").Width(200);
                        columns.Bound(typeof(string), "dealerKota").Title("Kota Dealer").Width(200);
                        //columns.Command(commands =>                                 {
                        //    commands.Custom("Edit").Text(" ").HtmlAttributes(new { @class = "btn btn-primary", @style = "color:white;", @title = "View" }).IconClass("glyphicon glyphicon-cog").Click("goToEditPage");
                        //    commands.Destroy().Text(" ").HtmlAttributes(new { @class = "btn btn-danger", @style = "color:white;", @title = "Hapus"}).IconClass("glyphicon glyphicon-trash");
                        //}).Width(250);
                    })
                 .Pageable()
                 .Sortable()
                 .Scrollable()
                 .Resizable(resize => resize.Columns(true))
                )

                <script>

                    function ShowValue(value) {
                        if (value == true) {
                            return "<i class='glyphicon glyphicon-ok'/>";
                        } else {
                            return "<i class='glyphicon glyphicon-remove'/>";
                        }
                    }
                    function GetMyImage(image)
                    {
                       var returnString = 'No Image Found'; 

                            //just checking to see if we have a name for the image 
                        if (image != null && image.length > 0) {
                            returnString = "<img class='image img-responsive' src=" + image + " title=" + image + " width='100' height='100' alt=" + image + " />";
                            return returnString;
                        } else
                            return "";
                    }    
                </script>
                
            </div>
        </div>
    </div>
</div>

