@using Abp.Authorization.Users
@using MPM.FLP.Web.Startup
@model MPM.FLP.FLPDb.VerifikasiJabatans
@{
    ViewData["Title"] = "VerifikasiJabatan";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <h2>
                    Verifikasi Jabatan
                </h2>
            </div>
            <div class="body">
                @(Html.Kendo().Grid<MPM.FLP.FLPDb.VerifikasiJabatans>()
                              .Name("grid")
                              .ToolBar(tools =>
                              {
                                  tools.Custom().Text("Tambah Verifikasi Jabatan Baru").HtmlAttributes(new { Href = Url.Action("Create", "VerifikasiJabatans") });
                              })
                              .DataSource(dataSource => dataSource
                                  .Custom()
                                  .ServerFiltering(true)
                                  .Type("aspnetmvc-ajax")
                                  .Transport(transport => transport
                                                .Read(read => read.Action("Grid_Read", "VerifikasiJabatans"))
                                                .Destroy(destroy => destroy.Action("Grid_Destroy", "VerifikasiJabatans"))
                                    )
                                  .Schema(schema => schema
                                    .Model(m => m.Id("id"))
                                    .Parse(@<text>
                                                function(response) {
                                                return response.result;
                                                }
                                    </text>)
                   .Data("data")
                   .Total("total")
                   )
                 )
              .Columns(columns =>
              {
                  columns.Bound(typeof(string), "title").Title("Judul").Width(200).Filterable(true);
                  columns.Bound(typeof(string), "idGroupJabatan").Title("Id Grup Jabatan").Width(200).Filterable(false);
                  columns.Bound(typeof(decimal), "passingScore").Title("Passing Score").Width(200).Filterable(false);
                  columns.Template("<button class='btn btn-primary waves-effect' onclick='goToQuestionPage(\"#=data.id#\")'><span>Manage</span></button>").Title("Manage Question").Width(200);
                  columns.Command(commands =>
                                                             {
                      commands.Custom("Edit").Text(" ").HtmlAttributes(new { @class = "btn btn-primary", @style = "color:white;", @title = "View" }).IconClass("glyphicon glyphicon-cog").Click("goToEditPage");
                      commands.Destroy().Text(" ").HtmlAttributes(new { @class = "btn btn-danger", @style = "color:white;", @title = "Hapus" }).IconClass("glyphicon glyphicon-trash");
                  }).Width(250);
              })
                       .Pageable()
                       .Sortable()
                       .Scrollable()
                       .Resizable(resize => resize.Columns(true))
                       .Filterable(filterable => filterable
                        .Extra(false)
                        .Operators(operators => operators
                        .ForString(str => str.Clear()
                            .IsEqualTo("Is equal to")
                            .Contains("Contains")
                        ))
                      )
                )
                @*.Filterable(filterable => filterable
        .Extra(false)
        .Operators(operators => operators
        .ForString(str => str.Clear()
        .IsEqualTo("Is equal to")
        .Contains("Contains")
        ))
        );*@
                <script>

                    function ShowValue(value) {
                        if (value == true) {
                            return "<i class='glyphicon glyphicon-ok'/>";
                        } else {
                            return "<i class='glyphicon glyphicon-remove'/>";
                        }
                    }
                    function goToQuestionPage(e) {
                            window.location.href = '@Url.Action("Questions", "VerifikasiJabatans")' + '/' + e;
                    }

                    function goToEditPage(e) {
                        e.preventDefault();
                        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

                        window.location.href = '@Url.Action("Edit", "VerifikasiJabatans")' + '/' + dataItem.id;
                    }
                    function GetMyImage(image)
                    {
                       var returnString = 'No Image Found';

                            //just checking to see if we have a name for the image
                        if (image != null && image.length > 0) {
                            returnString = "<img class='image img-responsive' src=" + image + " title=" + image + " width='100' height='100' alt=" + image + " />";
                            return returnString;
                        } else
                            return "";
                    }
                </script>

            </div>
        </div>
    </div>
</div>

