@*@model MPM.FLP.FLPDb.SalesTalks*@
@model MPM.FLP.FLPDb.ApparelCatalogs
@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <h2>Edit Apparel</h2>
            </div>
            <div class="body">
                @if ((string)TempData["alert"] != "" && TempData["alert"] != null)
                {
                    <div class="alert bg-red alert-dismissible" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                        @TempData["alert"]
                    </div>
                }
            <form id="form" asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group">
                    <label asp-for="Title" class="control-label"></label><br />
                    <input asp-for="Title" class="k-textbox" style="width:100%" required />
                    <input asp-for="CreatorUsername" hidden />
                    <input asp-for="CreationTime" hidden />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ApparelCategoryId" class="control-label"> Kategori Panduan </label><br />
                    @(Html.Kendo().ComboBoxFor(m => m.ApparelCategoryId)
                          .DataTextField("name")
                          .DataValueField("id")
                          .Placeholder("Select Category")
                          .HtmlAttributes(new { style = "width:30%;" })
                          .AutoBind(true)
                          .MinLength(3)
                          .DataSource(source => source
                                .Custom()
                                           .ServerFiltering(true)
                                           .Type("aspnetmvc-ajax")
                                .Transport(transport => transport
                                    .Read(read =>
                                    {
                                        read.Action("GetCategorys", "Apparel");
                                    })
                                )
                                .Schema(schema => schema
                                    .Data("data")
                                    .Model(model =>
                                    {
                                        model.Id("id");
                                        model.Field("name", typeof(string));
                                    })
                                    .Parse(@<text>
                                                function(response) {
                                                return response.result;
                                                }
                                    </text>)
                     )
                     )
                        )
                    @*<input asp-for="GuideCategoryId" class="form-control" />*@
                    <span asp-validation-for="ApparelCategoryId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Price" class="control-label"></label><br />
                    <input asp-for="Price" class="k-textbox" type="number" onkeydown="javascript: return event.keyCode === 8 || event.keyCode === 46 ? true : !isNaN(Number(event.key))" min="0" required />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ApparelCode" class="control-label">Kode Apparel</label><br />
                    <input asp-for="ApparelCode" class="k-textbox" style="width:100%" required maxlength="100" />
                    <span asp-validation-for="ApparelCode" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Order" class="control-label"></label><br />
                    <input asp-for="Order" type="number" onkeydown="javascript: return event.keyCode === 8 || event.keyCode === 46 ? true : !isNaN(Number(event.key))" class="k-textbox" min="1" value="@Model.Order" />
                    <span asp-validation-for="Order" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label"> Image </label>
                    <input asp-for="FeaturedImageUrl" hidden />
                    <br />
                    @(Html.Kendo().Upload()
                            .Name("files")
                            .Validation(validation => validation.AllowedExtensions(new string[] { ".jpeg", ".jpg", ".png" }))
                        )
                    <img class="image" src="@Model.FeaturedImageUrl" width="200" height="200" />
                    @*<input asp-for="EndDate" type="date" class="form-control" />*@
                </div>
                <div class="form-group">
                    <label asp-for="IsPublished" class="control-label"></label>
                    <div class="checkbox">
                        <div class="switch">
                            <label>OFF<input asp-for="IsPublished" type="checkbox" value="true"><span class="lever"></span>ON</label>
                        </div>
                    </div>
                    <span asp-validation-for="IsPublished" class="text-danger"></span>
                </div>
            </form>
                <div class="form-group">
                    <button type="submit" value="Create" class="btn btn-primary" onclick="submitForm()">Buat</button>
                    <button class="btn btn-default" onclick="backToIndex()">Kembali</button>
                </div>
            </div>
            <div class="footer">
                
            </div>
        </div>
        
        <script>
            const numInputs = document.querySelectorAll('input[type=number]')

            numInputs.forEach(function(input) {
              input.addEventListener('change', function(e) {
                if (e.target.value == '') {
                  e.target.value = 0
                }
              })
            })

            function submitForm() {
                $("#form").submit();
            }
            function backToIndex() {
               window.location.href = '@Url.Action("Index", "Apparel")';
                //window.history.back();
            }
            function goToEditPage(e) {
                e.preventDefault();
                var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

                window.location.href = '@Url.Action("Edit", "SalesTalks")' + '/' + dataItem.id;
            }
            function GetMyImage(image)
            {
                var returnString = 'No Image Found';

                // just checking to see if we have a name for the image
                if (image != null && image.length > 0) {
                    returnString = "<img class='image img-responsive' src=" + image + " title=" + image + " width='100' height='100' alt=" + image + " />";
                    return returnString;
                } else
                    return "";
            }        

        </script>
    </div>
</div>

<script>

    $(function() {
        // The Name() of the Grid is used to get its client-side instance.
        var SalesTalkAttachments = $("#SalesTalkAttachments").data("kendoGrid");
    });

</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
